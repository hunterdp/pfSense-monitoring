filter {
	    if "vcenter" in [tags] and [type] == "vcsa6" {
			grok {
				break_on_match => true
				match => [
					"message", "<%{POSINT:syslog_pri}>1 %{TIMESTAMP_ISO8601:syslog_time} %{SYSLOGHOST:hostname} (?<message_program>[a-zA-Z0-9\-]+) [\- ]+  %{TIMESTAMP_ISO8601:@timestamp} %{LOGLEVEL:message_loglevel} (?<message_body>(?<message_syslog>.*))",
					"message", "<%{POSINT:syslog_pri}>1 %{TIMESTAMP_ISO8601:syslog_time} %{SYSLOGHOST:hostname} (?<message_program>[a-zA-Z0-9\-]+) [\- ]+  %{TIMESTAMP_ISO8601:@timestamp} (?<message_body>(?<message_syslog>.*))",
					"message", "<%{POSINT:syslog_pri}>1 %{TIMESTAMP_ISO8601:syslog_time} %{SYSLOGHOST:hostname} (?<message_program>[a-zA-Z0-9\-]+) [\- ]+  (?<message_body>(?<message_syslog>.*))",		
					"message", "(?<message_body>(?<message_debug>.*))"
				]
			}

			if [message] =~ /\[Drm\]/ {
				grok {
					break_on_match => false
					match => [
						"message", ".*\[Drm\].*TOTAL[\s]cpu[\s]%{NUMBER:vpxd_drm_total_cpu:float}[\s]mem[\s]%{NUMBER:vpxd_drm_total_mem:float}"
					]
				}
			}

			if [message] =~ /ScoreboardStats/ {
				grok {
					break_on_match => false
					match => [
						"message", "ScoreboardStats.*total[\s]%{NUMBER:ScoreboardStats:float}"
					]
				}
			}

			if [message] =~ /VcServiceStats/ {
				grok {
					break_on_match => false
					match => [
						"message", "VcServiceStats.*/total[\s]%{NUMBER:VcServiceStats:float}",
						"message", "VcServiceStats.*/mean[\s]%{NUMBER:VcServiceStats:float}",
						"message", "VcServiceStats.*/max[\s]%{NUMBER:VcServiceStats:float}",
						"message", "VcServiceStats.*/min[\s]%{NUMBER:VcServiceStats:float}",
						"message", "VcServiceStats.*/numSamples[\s]%{NUMBER:VcServiceStats:float}"
					]
				}
			}

			if [message] =~ /OpMoLockStats/ {
				grok {
					break_on_match => false
					match => [
						#"message", "OpMoLockStats.*/total[\s]%{NUMBER:OpMoLockStats:float}",
						"message", "OpMoLockStats.*/mean[\s]%{NUMBER:OpMoLockStats:float}",
						#"message", "OpMoLockStats.*/max[\s]%{NUMBER:OpMoLockStats:float}",
						"message", "OpMoLockStats.*/min[\s]%{NUMBER:OpMoLockStats:float}"
						#"message", "OpMoLockStats.*/numSamples[\s]%{NUMBER:OpMoLockStats:float}"
					]
				}
			}

			if [message] =~ /HostStatus/ {
				grok {
					break_on_match => false
					match => [
						"message", "HostStatus.*(SpecGenNo|ChangeGenNo)[\s]%{NUMBER:HostStatus:float}",
						"message", "HostStatus.*IP[\s]%{GREEDYDATA}",
						"message", "HostStatus.*Name[\s]%{GREEDYDATA}"
					]
				}
			}

			if [message] =~ /ResPoolStats/ {
				grok {
					break_on_match => false
					match => [
						"message", "ResPoolStats.*(total|min|mean|max)[\s]%{NUMBER:ResPoolStats:float}"
					]
				}
			}

			if [message] =~ /OpMoLockStats/ {
				grok {
					break_on_match => false
					match => [
						"message", "OpMoLockStats.*total[\s]%{NUMBER:OpMoLockStats:float}"
					]
				}
			}
			
			if [message] =~ /peer/ {
				grok {
					break_on_match => false
					match => [
						"message", "peer=%{DATA:peer}"
					]
				}
			}
		}
}

